#!/bin/bash
#
# Cryptol to acirc optimized by ABC
#

set -e

scriptdir=$(dirname $(readlink -f "${BASH_SOURCE[0]}"))
liberty_file=$scriptdir/../liberties/aig.lib
opt_binary=""

usage () {
    echo "C2V: Cryptol to acirc through Verilog"
    echo "Usage: $0 [options] <cryptol-file> <function>"
    echo "  -b              output binary netlist instead of acirc"
    echo "  -l LIBERTY      use liberty file LIBERTY"
    exit $1
}

POSITIONAL=()
while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
        -b)
            opt_binary=1
            shift
            ;;
        -l)
            liberty_file="$scriptdir/../$2"
            shift
            shift
            ;;
        *)
            POSITIONAL+=("$1")
            shift
    esac
done
set -- "${POSITIONAL[@]}"

if [ x$1 = x ] || [ x$2 = x ]; then
    usage 1
fi

cryptolfile=$(realpath $1)
func=$2

tmp=$(mktemp -d)
cd $tmp

cat > sawcmds.saw <<- EOM
m <- cryptol_load "$cryptolfile";
f <- cryptol_extract m "$func";
write_aig "${func}.aig" f;
EOM

cat > abccmds.abc <<- EOM
read "${func}.aig"
write_verilog "${func}.in.v"
EOM

cat > yosys.ys <<- EOM
read_verilog "${func}.in.v"
synth -run fine
techmap; opt -fast
dfflibmap -liberty ${liberty_file}
abc -liberty ${liberty_file}
write_verilog ${func}.out.v
EOM

sizes=($(egrep "^$func\\s*:\\s*" $cryptolfile | perl -ne \
    'if (/: \(\[(\d+)],\s*\[(\d+)\]\) ->/) { print "$1 $2"; } elsif (/: \[(\d+)\] ->/) { print "$1 0"; }' \
))
inputsize=${sizes[0]}
keysize=${sizes[1]}

saw sawcmds.saw > /dev/null
abc -f abccmds.abc > /dev/null
yosys yosys.ys > /dev/null

if [ "$opt_binary" ]; then
    cat $func.out.v
else
    python $scriptdir/verilog2acirc.py $func.out.v $inputsize $keysize
fi
